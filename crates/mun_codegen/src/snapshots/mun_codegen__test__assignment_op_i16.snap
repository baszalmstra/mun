---
source: crates/mun_codegen/src/test.rs
assertion_line: 1045
expression: "\n    pub fn assign(a: i16, b: i16) -> i16 {\n        a = b;\n        a\n    }\n    pub fn assign_add(a: i16, b: i16) -> i16 {\n        a += b;\n        a\n    }\n    pub fn assign_subtract(a: i16, b: i16) -> i16 {\n        a -= b;\n        a\n    }\n    pub fn assign_multiply(a: i16, b: i16) -> i16 {\n        a *= b;\n        a\n    }\n    pub fn assign_divide(a: i16, b: i16) -> i16 {\n        a /= b;\n        a\n    }\n    pub fn assign_remainder(a: i16, b: i16) -> i16 {\n        a %= b;\n        a\n    }\n                        "

---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

%"mun_codegen::ir::types::TypeInfo" = type <{ [0 x i64], [16 x i8], [0 x i64], i8*, [0 x i64], i32, [0 x i64], i8, [3 x i8], %"mun_codegen::ir::types::TypeInfoData", [0 x i64] }>
%"mun_codegen::ir::types::TypeInfoData" = type <{ [0 x i8], i8, [39 x i8] }>

@global_type_table = external global [1 x %"mun_codegen::ir::types::TypeInfo"*]

define i16 @assign(i16 %0, i16 %1) {
body:
  ret i16 %1
}

define i16 @assign_add(i16 %0, i16 %1) {
body:
  %add = add i16 %0, %1
  ret i16 %add
}

define i16 @assign_subtract(i16 %0, i16 %1) {
body:
  %sub = sub i16 %0, %1
  ret i16 %sub
}

define i16 @assign_multiply(i16 %0, i16 %1) {
body:
  %mul = mul i16 %0, %1
  ret i16 %mul
}

define i16 @assign_divide(i16 %0, i16 %1) {
body:
  %div = sdiv i16 %0, %1
  ret i16 %div
}

define i16 @assign_remainder(i16 %0, i16 %1) {
body:
  %rem = srem i16 %0, %1
  ret i16 %rem
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

%"mun_codegen::ir::types::TypeInfo" = type <{ [0 x i64], [16 x i8], [0 x i64], i8*, [0 x i64], i32, [0 x i64], i8, [3 x i8], %"mun_codegen::ir::types::TypeInfoData", [0 x i64] }>
%"mun_codegen::ir::types::TypeInfoData" = type <{ [0 x i8], i8, [39 x i8] }>

@"type_info::<core::i16>::name" = private unnamed_addr constant [10 x i8] c"core::i16\00"
@"type_info::<core::i16>" = private unnamed_addr constant <{ [16 x i8], i8*, [48 x i8] }> <{ [16 x i8] c"\05\CD|\F8Bv\D8\B1\E8\8B\8C\D8\8D\B5\89\B0", i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"type_info::<core::i16>::name", i32 0, i32 0), [48 x i8] c"\10\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
@global_type_table = constant [1 x %"mun_codegen::ir::types::TypeInfo"*] [%"mun_codegen::ir::types::TypeInfo"* @"type_info::<core::i16>"]

