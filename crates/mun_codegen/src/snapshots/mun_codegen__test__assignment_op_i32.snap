---
source: crates/mun_codegen/src/test.rs
assertion_line: 1045
expression: "\n    pub fn assign(a: i32, b: i32) -> i32 {\n        a = b;\n        a\n    }\n    pub fn assign_add(a: i32, b: i32) -> i32 {\n        a += b;\n        a\n    }\n    pub fn assign_subtract(a: i32, b: i32) -> i32 {\n        a -= b;\n        a\n    }\n    pub fn assign_multiply(a: i32, b: i32) -> i32 {\n        a *= b;\n        a\n    }\n    pub fn assign_divide(a: i32, b: i32) -> i32 {\n        a /= b;\n        a\n    }\n    pub fn assign_remainder(a: i32, b: i32) -> i32 {\n        a %= b;\n        a\n    }\n                        "

---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

%"mun_codegen::ir::types::TypeInfo" = type <{ [0 x i64], [16 x i8], [0 x i64], i8*, [0 x i64], i32, [0 x i64], i8, [3 x i8], %"mun_codegen::ir::types::TypeInfoData", [0 x i64] }>
%"mun_codegen::ir::types::TypeInfoData" = type <{ [0 x i8], i8, [39 x i8] }>

@global_type_table = external global [1 x %"mun_codegen::ir::types::TypeInfo"*]

define i32 @assign(i32 %0, i32 %1) {
body:
  ret i32 %1
}

define i32 @assign_add(i32 %0, i32 %1) {
body:
  %add = add i32 %0, %1
  ret i32 %add
}

define i32 @assign_subtract(i32 %0, i32 %1) {
body:
  %sub = sub i32 %0, %1
  ret i32 %sub
}

define i32 @assign_multiply(i32 %0, i32 %1) {
body:
  %mul = mul i32 %0, %1
  ret i32 %mul
}

define i32 @assign_divide(i32 %0, i32 %1) {
body:
  %div = sdiv i32 %0, %1
  ret i32 %div
}

define i32 @assign_remainder(i32 %0, i32 %1) {
body:
  %rem = srem i32 %0, %1
  ret i32 %rem
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

%"mun_codegen::ir::types::TypeInfo" = type <{ [0 x i64], [16 x i8], [0 x i64], i8*, [0 x i64], i32, [0 x i64], i8, [3 x i8], %"mun_codegen::ir::types::TypeInfoData", [0 x i64] }>
%"mun_codegen::ir::types::TypeInfoData" = type <{ [0 x i8], i8, [39 x i8] }>

@"type_info::<core::i32>::name" = private unnamed_addr constant [10 x i8] c"core::i32\00"
@"type_info::<core::i32>" = private unnamed_addr constant <{ [16 x i8], i8*, [48 x i8] }> <{ [16 x i8] c"\17yzt\19\D62\17\D25\95C\17\88[\FA", i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"type_info::<core::i32>::name", i32 0, i32 0), [48 x i8] c" \00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
@global_type_table = constant [1 x %"mun_codegen::ir::types::TypeInfo"*] [%"mun_codegen::ir::types::TypeInfo"* @"type_info::<core::i32>"]

