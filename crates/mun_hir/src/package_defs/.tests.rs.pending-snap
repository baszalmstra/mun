{"run_id":"1733057018-378834100","line":183,"new":{"module_name":"mun_hir__package_defs__tests","snapshot_name":"use_","metadata":{"source":"crates/mun_hir/src/package_defs/tests.rs","assertion_line":183,"expression":"resolve(r#\"\n    //- /bar.mun\n    use package::Foo;\n    pub struct Bar(Foo);\n\n    //- /mod.mun\n    pub use foo::Foo; // Re-export a child's definition\n\n    struct Baz;\n\n    //- /foo.mun\n    use package::{bar::Bar, Baz};\n\n    pub struct Foo {\n        baz: Baz, // Can use private definitions from any of its ancestors\n    }\n\n    pub fn foo_from_bar(bar: Bar) -> Foo {\n        bar.0\n    }\n    \"#)"},"snapshot":"mod mod\n+-- struct Baz\n+-- use struct package::foo::Foo\n+-- mod bar\n|   +-- struct Bar\n|   '-- use struct package::foo::Foo\n'-- mod foo\n    +-- ERROR: 165..170: access of private type\n    +-- fn foo_from_bar\n    +-- struct Foo\n    +-- use struct package::Baz\n    '-- use struct package::bar::Bar\n"},"old":{"module_name":"mun_hir__package_defs__tests","metadata":{},"snapshot":"mod mod\n+-- struct Baz\n+-- use struct package::foo::Foo\n+-- mod bar\n|   +-- struct Bar\n|   '-- use struct package::foo::Foo\n'-- mod foo\n    +-- fn foo_from_bar\n    +-- struct Foo\n    +-- use struct package::Baz\n    '-- use struct package::bar::Bar"}}
{"run_id":"1733057105-422454300","line":161,"new":null,"old":null}
{"run_id":"1733057105-422454300","line":38,"new":null,"old":null}
{"run_id":"1733057105-422454300","line":132,"new":null,"old":null}
{"run_id":"1733057105-422454300","line":111,"new":null,"old":null}
{"run_id":"1733057105-422454300","line":84,"new":null,"old":null}
{"run_id":"1733057105-422454300","line":11,"new":null,"old":null}
{"run_id":"1733057105-422454300","line":61,"new":null,"old":null}
{"run_id":"1733057105-422454300","line":183,"new":{"module_name":"mun_hir__package_defs__tests","snapshot_name":"use_","metadata":{"source":"crates/mun_hir/src/package_defs/tests.rs","assertion_line":183,"expression":"resolve(r#\"\n    //- /bar.mun\n    use package::Foo;\n    pub struct Bar(Foo);\n\n    //- /mod.mun\n    pub use foo::Foo; // Re-export a child's definition\n\n    struct Baz;\n\n    //- /foo.mun\n    use package::{bar::Bar, Baz};\n\n    pub struct Foo {\n        baz: Baz, // Can use private definitions from any of its ancestors\n    }\n\n    pub fn foo_from_bar(bar: Bar) -> Foo {\n        bar.0\n    }\n    \"#)"},"snapshot":"mod mod\n+-- struct Baz\n+-- use struct package::foo::Foo\n+-- mod bar\n|   +-- struct Bar\n|   '-- use struct package::foo::Foo\n'-- mod foo\n    +-- ERROR: 165..170: access of private type\n    +-- fn foo_from_bar\n    +-- struct Foo\n    +-- use struct package::Baz\n    '-- use struct package::bar::Bar\n"},"old":{"module_name":"mun_hir__package_defs__tests","metadata":{},"snapshot":"mod mod\n+-- struct Baz\n+-- use struct package::foo::Foo\n+-- mod bar\n|   +-- struct Bar\n|   '-- use struct package::foo::Foo\n'-- mod foo\n    +-- fn foo_from_bar\n    +-- struct Foo\n    +-- use struct package::Baz\n    '-- use struct package::bar::Bar"}}
