---
source: crates/mun_syntax/src/tests/parser.rs
expression: "fn foo() {\n    let x = 1..;\n    if 1.. {};\n}"
---
SOURCE_FILE@[0; 44)
  FUNCTION_DEF@[0; 44)
    FN_KW@[0; 2) "fn"
    WHITESPACE@[2; 3) " "
    NAME@[3; 6)
      IDENT@[3; 6) "foo"
    PARAM_LIST@[6; 8)
      L_PAREN@[6; 7) "("
      R_PAREN@[7; 8) ")"
    WHITESPACE@[8; 9) " "
    BLOCK_EXPR@[9; 44)
      L_CURLY@[9; 10) "{"
      WHITESPACE@[10; 15) "\n    "
      LET_STMT@[15; 27)
        LET_KW@[15; 18) "let"
        WHITESPACE@[18; 19) " "
        BIND_PAT@[19; 20)
          NAME@[19; 20)
            IDENT@[19; 20) "x"
        WHITESPACE@[20; 21) " "
        EQ@[21; 22) "="
        WHITESPACE@[22; 23) " "
        RANGE_EXPR@[23; 26)
          LITERAL@[23; 24)
            INT_NUMBER@[23; 24) "1"
          DOTDOT@[24; 26) ".."
        SEMI@[26; 27) ";"
      WHITESPACE@[27; 32) "\n    "
      EXPR_STMT@[32; 42)
        IF_EXPR@[32; 41)
          IF_KW@[32; 34) "if"
          WHITESPACE@[34; 35) " "
          CONDITION@[35; 38)
            RANGE_EXPR@[35; 38)
              LITERAL@[35; 36)
                INT_NUMBER@[35; 36) "1"
              DOTDOT@[36; 38) ".."
          WHITESPACE@[38; 39) " "
          BLOCK_EXPR@[39; 41)
            L_CURLY@[39; 40) "{"
            R_CURLY@[40; 41) "}"
        SEMI@[41; 42) ";"
      WHITESPACE@[42; 43) "\n"
      R_CURLY@[43; 44) "}"

